/*
给定两个整数 n 和 k，返回 1 ... n 中所有可能的 k 个数的组合。

示例:

输入: n = 4, k = 2
输出:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
*/

class Solution {
public:
	vector<vector<int>> res;
	vector<int> tmp;
	void dfs(int n, int k, int x)
	{
		if(tmp.size()==k)
		{
			res.push_back(tmp);
			return;
		}

		for(int i = x;i<=n-(k-tmp.size())+1; ++i)
		{
			tmp.push_back(i); // 循环插入所有可能的数据
			dfs(n,k,i+1);
			tmp.pop_back(); // 取出进行下一个数字
		}
		return;
	}
    vector<vector<int>> combine(int n, int k) 
	{
		dfs(n,k,1);
		return res;
    }
};